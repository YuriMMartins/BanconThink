import java.util.ArrayList;
import java.util.Scanner;

public class Principal {

	static Scanner input = new Scanner(System.in);
	static ArrayList<ContaThink> contasBancarias;

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		contasBancarias = new ArrayList<ContaThink>();
		operacoes();
	}

	public static void operacoes() {

		System.out.println("-------------------------------------------------");
		System.out.println("----------------Bem Vindo a Think----------------");
		System.out.println("-------------------------------------------------");
		System.out.println("-----Selecione a Operação que deseja utilizar----");
		System.out.println("|    Opção 1 - Criar Conta    |");
		System.out.println("|    Opção 2 - Depositar      |");
		System.out.println("|    Opção 3 - Sacar          |");
		System.out.println("|    Opção 4 - Transferir     |");
		System.out.println("|    Opção 5 - Listar         |");
		System.out.println("|    Opção 6 - Sair           |");

		int operacao = input.nextInt();

		switch (operacao) {

		case 1:
			criarConta();
			break;
		case 2:
			depositar();
			break;
		case 3:
			sacar();
			break;
		case 4:
			transferir();
			break;
		case 5:
			listar();
			break;
		case 6:
			System.out.println("Obrigado por utilizar a Think!");
			System.exit(0);

		default:
			System.out.println("Opcao invalida!");
			operacoes();
			break;

		}

	}
		
	public static void criarConta() {

		System.out.println("\nNome: ");
		String nome = input.next();
		input.nextLine();
		System.out.println("\nCPF: ");
		String cpf = input.next();
		System.out.println("\nEmail: ");
		String email = input.next();

		Pessoas cliente = new Pessoas(nome, cpf, email);

		ContaThink conta = new ContaThink(cliente);

		contasBancarias.add(conta);
		System.out.println("Conta Criada Com Sucesso!");

		operacoes();

	}
	
	private static ContaThink encontrarConta(int numeroConta) {
		ContaThink conta = null;
		if (contasBancarias.size() > 0) {
			for (ContaThink c : contasBancarias) {
				if (c.getNumeroConta() == numeroConta);
				conta = c;
				
			}

		}else { System.out.println("Conta Não encontrada!");}
		
		return conta;
	}
	
	
public static void depositar() {
	System.out.println("Numero da conta: ");
	int numeroconta = input.nextInt();

	ContaThink conta = encontrarConta(numeroconta);
	if (conta.getNumeroConta() == numeroconta) {
		System.out.println("Qual valor deseja depositar? ");
		Double valorDeposito = input.nextDouble();
		conta.depositar(valorDeposito);
	} else {
		System.out.println("Conta não encontrada!");
	}
	operacoes();
}

	public static void sacar() {
		System.out.println("Numero da conta: ");
		int numeroConta = input.nextInt();
		ContaThink conta = encontrarConta(numeroConta);
		if (conta != null) {
			System.out.println("Qual valor deseja sacar? ");
			Double valorSaque = input.nextDouble();
			conta.sacar(valorSaque);
		}
		operacoes();
	}
	
	public static void transferir() {
		System.out.println("Numero da conta do remetente: ");
		int numeroContaRemetente = input.nextInt();

		ContaThink contaRemetente = encontrarConta(numeroContaRemetente);
		if (contaRemetente != null) {
			System.out.println("Numero da conta do destinatario: ");
			int numeroContaDestinatario = input.nextInt();
			ContaThink contaDestinatario = encontrarConta(numeroContaDestinatario);

			if (contaDestinatario != null) {

				System.out.println("Qual valor que deseja transferir? ");
				Double valorTransferencia = input.nextDouble();

				contaRemetente.transferir(contaDestinatario, valorTransferencia);
			}
			else {
				System.out.println("Transferencia nao realizada!");
			}
		}
		operacoes();
	}

	public static void listar() {
		if (contasBancarias.size() > 0) {
			for (ContaThink conta : contasBancarias) {
				System.out.println(conta);
			}
		} else {
			System.out.println("Não há contas cadastradas");
		}
		operacoes();
	}
	
	
	
	


	}
